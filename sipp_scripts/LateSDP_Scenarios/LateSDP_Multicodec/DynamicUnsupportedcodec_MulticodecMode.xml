<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">
<scenario name="Basic Sipstone UAC">
  <!-- In client mode (sipp placing calls), the Call-ID MUST be         -->
  <!-- generated by sipp. To do so, use [call_id] keyword.                -->
  <send retrans="500">
    <![CDATA[

      INVITE sip:[service]@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:[service]@[remote_ip]:[remote_port]>
      Call-ID: [call_id]
      CSeq: [cseq] INVITE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      X-DolbyVoice-Client-LogId: JustInviteSDPLess-g722multicodec.xml
      X-DolbyVoice-MediaServer-MultiCodec:   1  
      Subject: Performance Test
      Content-Type: application/sdp
      Content-Length: [len]

    ]]>
  </send>

  <!--
    * verify that multicodec is requested: CONFSERV113
      [DVCS CONFSERV113 INFO] Client (JustInviteSDPLess-g722multicodec.xml) session (F99XX60N3a77Q) requested multi-codec support in SIP INVITE.
    * verify that G722 is offered
    * verify that this request is accepted: log CONFSERV115, CONFCNTLV61
      [DVCS CONFSERV115 INFO] Multi-codec support enabled for client (JustInviteSDPLess-g722multicodec.xml) session (F99XX60N3a77Q). Accepting uplink codecs: G722 (payload ID: 9).
      [dvconference_controller CONFCNTLV61 INFO] Client (F99XX60N3a77Q) connecting with G722.
  -->

  <recv response="100">
  </recv>

  <recv response="180" optional="true">
  </recv>

  <recv response="183" optional="true">
  </recv>

  <!-- By adding rrs="true" (Record Route Sets), the route sets         -->
  <!-- are saved and used for following messages sent. Useful to test   -->
  <!-- against stateful SIP proxies/B2BUAs.                             -->
  <recv response="200">
    <action>
      <ereg
          regexp="[0-9a-zA-Z]{13}"
          search_in="hdr"
          header="To: "
          check_it="true"
          assign_to="2"/>
      <log message="Matched 'To'=[$2]"/>
    </action> 
  </recv>

  <!-- Packet lost can be simulated in any send/recv message by         -->
  <!-- by adding the 'lost = "10"'. Value can be [1-100] percent.       -->
  <send>
    <![CDATA[

      ACK sip:[service]@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:[service]@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: [cseq] ACK
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port] RTP/AVP 124
      a=rtpmap:124 AMR-WB/16000
      a=fmtp:124 bitrate=32000
    ]]>
  </send>

  <!-- This delay can be customized by the -d command-line option       -->
  <!-- or by adding a 'milliseconds = "value"' option here.             -->


<recv request="BYE" crlf="true">
  </recv>


  <send retrans="500">
    <![CDATA[

      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/sdp
      Content-Length:0


    ]]>
  </send>

  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>
