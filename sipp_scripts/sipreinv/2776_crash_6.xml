<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--                 Sipp default 'uac' scenario.                       -->
<!--                                                                    -->

<scenario name="Basic Sipstone UAC">

  <!-- In client mode (sipp placing calls), the Call-ID MUST be         -->
  <!-- generated by sipp. To do so, use [call_id] keyword.                -->
  <send>
    <![CDATA[

      INVITE sip:[service]@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:[service]@[remote_ip]:[remote_port]>
      Call-ID: [call_id]
      CSeq: [cseq] INVITE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Allow: INVITE, ACK, BYE, CANCEL, OPTIONS, PRACK, MESSAGE, SUBSCRIBE, NOTIFY, REFER, UPDATE, REGISTER, INFO
      Require: timer
      Supported: timer, 100rel
      Session-Expires: 90;refresher=uas
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port] RTP/AVP 0
      a=rtpmap:0 PCMU/8000

    ]]>
  </send>

  <recv response="100"
        optional="true">
  </recv>

  <recv response="180" optional="true">
  </recv>

  <!-- By adding rrs="true" (Record Route Sets), the route sets         -->
  <!-- are saved and used for following messages sent. Useful to test   -->
  <!-- against stateful SIP proxies/B2BUAs.                             -->
  <recv response="200" rtd="true">
	<action>
		<ereg regexp="tag=\s*(\S*)"  
   			  search_in="hdr" header = "To:"  
   			  assign_to="unused,client_sip_id"/>
    </action>
  </recv>

<Reference variables = "unused"/>
  <!-- Packet lost can be simulated in any send/recv message by         -->
  <!-- by adding the 'lost = "10"'. Value can be [1-100] percent.       -->
  <send>
    <![CDATA[

      ACK sip:[service]@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:[service]@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: [cseq] ACK
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Length: 0

    ]]>
  </send>

<nop>
<action>
    <exec rtp_stream="/root/btdummy_wavs/wavs/Angus_10.wav,-1,0" />
</action>
</nop>

<!-- Send INFO SIP to server to create conf -->
 <send> <!-- 9 -->
     <![CDATA[

      INFO sip:[service]@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      [last_From]
      [last_To]
      Call-ID: [call_id]
      CSeq: [cseq] INFO
      Contact: sip:sipp@[local_ip]:[local_port]
      Accept: application/sdp, text/*, application/msml+xml, application/moml+xml
      Allow: INVITE, ACK, BYE, CANCEL, OPTIONS, PRACK, MESSAGE, SUBSCRIBE, NOTIFY, REFER, UPDATE, REGISTER, INFO
      Supported: timer, 100rel
      Content-Type: application/msml+xml
      Content-Length: [len]

      <msml version="1.1">
        <createconference name="conf_[$client_sip_id]">
          <audiomix>
            <asn ri="300s" />
            <n-loudest n="4" />
          </audiomix>
        </createconference>
        <join id1="conn:[$client_sip_id]" id2="conf:conf_[$client_sip_id]">
          <stream dir="to-id1" media="audio" dlb:echo_suppression="disable">
            <clamp dtmf="false" />
            <gain amt="0" />
          </stream>
          <stream dir="from-id1" media="audio">
            <clamp dtmf="true" />
            <gain amt="0" />
          </stream>
        </join>
      </msml>

     ]]>
</send>

<recv response="200"/>

<!-- wait for reINVITE almost come then Send MSML to destroy conf -->
<pause milliseconds="40000"/>
<send>
    <![CDATA[

      INFO sip:[service]@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      [last_From]
      [last_To]
      Call-ID: [call_id]
      CSeq: [cseq] INFO
      Contact: sip:sipp@[local_ip]:[local_port]
      Accept: application/sdp, text/*, application/msml+xml, application/moml+xml
      Allow: INVITE, ACK, BYE, CANCEL, OPTIONS, PRACK, MESSAGE, SUBSCRIBE, NOTIFY, REFER, UPDATE, REGISTER, INFO
      Supported: timer, 100rel
      Content-Type: application/msml+xml
      Content-Length: [len]

      <msml version="1.1">
        <destroyconference id="conf:conf_[$client_sip_id]">
          <audiomix>
            <asn ri="300s" />
            <n-loudest n="4" />
          </audiomix>
        </destroyconference>
      </msml>

     ]]>
 </send>

<recv response="200"/>

<label id="lbl_receive_reinvite_or_bye"/>
<recv request="INVITE|BYE" regexp_match="true">
    <action>
		<ereg
			regexp="(INVITE|BYE)"
			search_in="hdr" header="CSeq:"
         	assign_to="unused,sip_type"/>
        <ereg
            regexp=".*"
            search_in="hdr"
            header="Via:"
            check_it="true"
            assign_to="Via_reinvite"/>
        <ereg
            regexp=".*"
            search_in="hdr"
            header="From:"
            check_it="true"
            assign_to="From_reinvite"/>
        <ereg
            regexp=".*"
            search_in="hdr"
            header="To:"
            check_it="true"
            assign_to="To_reinvite"/>
        <ereg
            regexp=".*"
            search_in="hdr"
            header="Call-ID:"
            check_it="true"
            assign_to="Call-ID_reinvite"/>
        <ereg
            regexp=".*"
            search_in="hdr"
            header="CSeq:"
            check_it="true"
            assign_to="CSeq_reinvite"/>
        <!--
        <ereg
            regexp=".*"
            search_in="hdr"
            header="Contact:"
            check_it="true"
            assign_to="Contact_reinvite"/>
         -->
    </action>
</recv>

<nop>
	<action>
		<log message="sip_type: [$sip_type]"/>
		<strcmp assign_to="sip_invite" variable="sip_type" value="INVITE"/>
		<log message="sip_invite: [$sip_invite]"/>
		<test assign_to="sip_invite" variable="sip_invite" compare="equal" value="0"/>
		<strcmp assign_to="sip_bye" variable="sip_type" value="BYE"/>
		<log message="sip_bye: [$sip_bye]"/>
		<test assign_to="sip_bye" variable="sip_bye" compare="equal" value="0"/>
		<log message="sip_invite: [$sip_invite]"/>
		<log message="sip_bye: [$sip_bye]"/>
	</action>
</nop>

<nop next="lbl_send_reinvite_response" test="sip_invite"/>
<nop next="lbl_send_bye_response" test="sip_bye"/>

<label id="lbl_send_reinvite_response"/>
<nop>
	<action>
		<log message="in lbl_send_reinvite_response"/>
	</action>
</nop>

<send>
   <![CDATA[

     SIP/2.0 481 Initial request should have no To tag.
     Via: [$Via_reinvite]
     From: [$From_reinvite]
     To: [$To_reinvite]
     Call-ID: [$Call-ID_reinvite]
     CSeq: [$CSeq_reinvite]
     User-Agent: sofia-sip/1.12.10devel
     Allow: INVITE, ACK, BYE, CANCEL, OPTIONS, PRACK, MESSAGE, SUBSCRIBE, NOTIFY, REFER, UPDATE, REGISTER, INFO
     Supported: timer, 100rel
     Content-Length: [len]

   ]]>
</send>

<recv request="ACK" rtd="true" crlf="true" next="lbl_receive_reinvite_or_bye"> </recv>

<label id="lbl_send_bye_response"/>
<nop>
	<action>
		<log message="in lbl_send_bye_response"/>
	</action>
</nop>

<send>
       <![CDATA[

          SIP/2.0 481 Initial request should have no To tag.
          [last_Via:]
          [last_From:]
          [last_To:]
          [last_Call-ID:]
          [last_CSeq:]
          User-Agent: sofia-sip/1.12.10devel
          Allow: INVITE, ACK, BYE, CANCEL, OPTIONS, PRACK, MESSAGE, SUBSCRIBE, NOTIFY, REFER, UPDATE, REGISTER, INFO
          Supported: timer, 100rel
          Content-Length: [len]
     ]]>
</send>

</scenario>


